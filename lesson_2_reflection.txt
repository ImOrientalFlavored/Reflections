What happens when you initialize a repository? Why do you need to do
it?

How is the staging area different from the working directory and the
repository? What value do you think it offers?

How can you use the staging area to make sure you have one commit per
logical change?

What are some situations when branches would be helpful in keeping
your history organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we
represent it in the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing
merges manually?

How is the staging area different from the working directory and the
repository? What value do you think it offers?     
	The staging area is a prepratory step files from the working directory are placed in
	before committing into a repository. It helps organize the purpose of
	the commit.

How can you use the staging area to make sure you have one commit per
logical change?

	you can chose which file to add the staging area. Giving you
	control to which file you wish to commit and also have options to
	show status and compare the staging area with the previous recent
	commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When you'd like to add features to the project but may change the overall project you may want to make a branch
	which keeps changes away from the master branch and gives you freedom to make experiment

How do the diagrams help you visualize the branch structure?

	They easyly display where on the branch a new branch is made and on which commit